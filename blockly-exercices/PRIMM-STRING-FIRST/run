#!/bin/python3

import subprocess

from inginious import input

import ingitest

# Exercice: print(len(TEXT))


class Test(ingitest.TestCase):

    def __run(self, file: str) -> str:
        """Run the file and collect the outputs"""
        with subprocess.Popen(
            ["python3", file],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
        ) as pipe:
            stdout, stderr = map(
                lambda b: b.decode(),
                pipe.communicate(),
            )
            rcode = pipe.returncode

        # Check exit code
        if rcode != 0:
            self.fail(
                "Votre code n'a pas pu être exécuté. "
                "Vérifiez que tous vos blocs sont correctement connectés."
            )
        return stdout

    def setUpClass(self):
        input.parse_template("bloc-substring.pytpl")

    def test1(self):
        output = self.__run("bloc-substring.pytpl").strip()

        try:
            output_int = int(output)
        except ValueError:
            self.fail(
                f"Une longueure est un nombre, mais {output} n'en est pas un.")
        else:
            self.success(
                f"Bravo! La longeure est de {output_int} charactères."
            )


if __name__ == '__main__':
    Test().run().setFeedback()
