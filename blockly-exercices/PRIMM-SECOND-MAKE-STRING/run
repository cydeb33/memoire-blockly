#!/bin/python3

import subprocess

from inginious import input

import ingitest


class Test(ingitest.TestCase):

    def __run(self, file: str) -> str:
        """Run the file and collect the outputs"""
        with subprocess.Popen(
            ["python3", file],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
        ) as pipe:
            stdout, _ = map(
                lambda b: b.decode(),
                pipe.communicate(),
            )
            rcode = pipe.returncode

        # Check exit code
        if rcode != 0:
            self.fail(
                "Votre code n'a pas pu être exécuté. "
                "Vérifiez que tous vos blocs sont correctement connectés."
            )
        return stdout

    def setUpClass(self):
        input.parse_template("student.pytpl")

    def test1(self):
        output = self.__run("student.pytpl").strip()

        self.assertEqual(
            output,
            "ATGCCGTACCAGGT",
            f"Réponse incorrecte. Attention d'UNIQUEMENT afficher la sous-chaîne ADN qui nous intéresse. Vous avez écrit : {output}.",
            f"Correct ! Vous avez extrait la sous-chaîne de l'ADN qui nous intéresse : {output}."
        )


if __name__ == '__main__':
    Test().run().setFeedback()
