#!/bin/python3
# Open source licence goes here

import os
import subprocess
import shlex
import unittest

from inginious import feedback
from inginious import input


class Test(unittest.TestCase):
    """Test cases wrapper"""

    @staticmethod
    def __parse_template(file: str) -> str:
        """Parse the INGInious template"""
        input.parse_template(file)
        return file

    def __run(self, file: str) -> str:
        """Run the file and collect the outputs"""
        with subprocess.Popen(
            ["python3", file],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
        ) as pipe:
            stdout, stderr = map(
                lambda b: b.decode(),
                pipe.communicate(),
            )
            rcode = pipe.returncode

        # Check exit code
        if rcode != 0:
            feedback.set_global_result("failed")
            feedback.set_global_feedback(
                "Votre code n'a pas pu être exécuté. "
                "Vérifiez que tous vos blocs sont correctement connectés."
            )
            self.fail()
        return stdout

    def test1(self):
        output = self.__run(self.__parse_template("print.pytpl"))
        self.assertNotEqual(output.strip(), "")

if __name__ == "__main__":
    # Replace sum.py by your filename on this line and the next
    input.parse_template("print.py")
    p = subprocess.Popen(shlex.split("python3 print.py"),
                         stderr=subprocess.STDOUT, stdout=subprocess.PIPE)
    make_output = p.communicate()[0].decode('utf-8')
    if p.returncode:
        feedback.set_global_result("failed")
        feedback.set_global_feedback(
            "Votre code n'a pas pu être exécuté. Vérifiez que tous vos blocs sont correctement connectés.")
        exit(0)
    elif make_output != "\n":
        feedback.set_global_result("success")
        feedback.set_global_feedback("Vous avez écrit : " + make_output)
    else:
        feedback.set_global_result("failed")
        feedback.set_global_feedback(
            "Veuillez écrire votre prénom, vous avez écrit : " + make_output)
